#include <string>
#include <vector>
#include <iostream>

using namespace std;
/*
조이스틱으로 알파벳 이름을 완성하세요. 맨 처음엔 A로만 이루어져 있습니다.
ex) 완성해야 하는 이름이 세 글자면 AAA, 네 글자면 AAAA

조이스틱을 각 방향으로 움직이면 아래와 같습니다.

▲ - 다음 알파벳
▼ - 이전 알파벳 (A에서 아래쪽으로 이동하면 Z로)
◀ - 커서를 왼쪽으로 이동 (첫 번째 위치에서 왼쪽으로 이동하면 마지막 문자에 커서)
▶ - 커서를 오른쪽으로 이동
예를 들어 아래의 방법으로 JAZ를 만들 수 있습니다.

- 첫 번째 위치에서 조이스틱을 위로 9번 조작하여 J를 완성합니다.
- 조이스틱을 왼쪽으로 1번 조작하여 커서를 마지막 문자 위치로 이동시킵니다.
- 마지막 위치에서 조이스틱을 아래로 1번 조작하여 Z를 완성합니다.
따라서 11번 이동시켜 "JAZ"를 만들 수 있고, 이때가 최소 이동입니다.
만들고자 하는 이름 name이 매개변수로 주어질 때, 이름에 대해 조이스틱 조작 횟수의 최솟값을 return 하도록 solution 함수를 만드세요.

제한 사항
- name은 알파벳 대문자로만 이루어져 있습니다.
- name의 길이는 1 이상 20 이하입니다.
*/
int solution(string name) {
	int answer = 0;
	int i, j, m1, m2, m3;
	int temp = 2000, temp1 = 2000;
	for (i = 0; i < name.length(); i++)
		name[i] >= 'N' ? answer += '[' - name[i] : answer += name[i] - 'A';	

	for (j = name.length() - 1; j >= 0 && name[j] == 'A'; j--);
	m1 = j; //오른쪽으로 스트레이트
		
	for (i = j - 1; i >= 0; i--) {
		if (name[i] != 'A') {
			temp1 = temp;
			m2 = i * 2 + (name.length() - j); //오른쪽으로 가다가 왼쪽으로 되돌아가는거
			m3 = (name.length() - j) * 2 + i; //왼쪽먼저 눌렀다가 오른쪽으로 다시 오는거
			temp = m1 < m2 ? (m1 < m3 ? m1 : m3) : (m2 < m3 ? m2 : m3);
			j = i;
		}
		if (temp1 < temp) temp = temp1;
	}
	answer += temp;

	return answer;
}

int main()
{
	string name = "CANAAAAANAN";
	cout << solution(name);

}